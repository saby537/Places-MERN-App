{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/BackDrop.js","shared/hooks/auth-hook.js","shared/components/Header/MainHeader.js","shared/components/Header/NavLinks.js","shared/components/Header/SideDrawer.js","shared/components/Header/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userID","token","login","logout","LoadingSpinner","props","className","asOverlay","BackDrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","DrawerIsOpen","SetDrawerOpen","Fragment","Users","React","lazy","NewPlace","UpdatePlace","Auth","UserPlaces","App","routes","setToken","setuserID","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","expiryDate","Date","getTime","localStorage","setItem","JSON","stringify","userId","toISOString","removeItem","useEffect","storedData","parse","getItem","remainingTime","setTimeout","clearTimeout","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.e962942e.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userID: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from \"react\";\n\nimport \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./BackDrop.css\";\n\nconst BackDrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default BackDrop;\n","import { useState, useEffect, useCallback } from \"react\";\nlet logoutTimer;\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userID, setuserID] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setuserID(uid);\n    const expiryDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(expiryDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expirationDate: expiryDate.toISOString(),\n      })\n    );\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setuserID(null);\n    setTokenExpirationDate(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expirationDate) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expirationDate)\n      );\n    }\n  }, [login]);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  return { token, userID, login, logout };\n};\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth-context\";\n\nimport \"./NavLinks.css\";\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userID}/places`} exact>\n            MY PLACES\n          </NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\" exact>\n            ADD PLACE\n          </NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\" exact>\n            AUTHENTICATE\n          </NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOG OUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\">{props.children}</aside>\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport BackDrop from \"../UIElements/BackDrop\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = (props) => {\n  const [DrawerIsOpen, SetDrawerOpen] = useState(false);\n  const OpenDrawer = () => {\n    SetDrawerOpen(true);\n  };\n  const CloseDrawer = () => {\n    SetDrawerOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {DrawerIsOpen && <BackDrop onClick={CloseDrawer} />}\n      <SideDrawer show={DrawerIsOpen}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      )\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={OpenDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Header/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/pages/users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/updatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\n\nfunction App() {\n  const { token, userID, login, logout } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:pid\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userID: userID,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}